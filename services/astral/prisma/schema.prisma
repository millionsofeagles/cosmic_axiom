// /services/astral/prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Token {
  id         String   @id @default(uuid())
  jti        String   @unique // <-- Add this to support lookup/revocation by jti
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  createdAt  DateTime @default(now())
  expiresAt  DateTime
  revokedAt  DateTime?
}

model User {
  id           String   @id @default(uuid())
  username     String   @unique
  name         String
  role         String
  passwordHash String
  createdAt    DateTime @default(now())
  lastLogin    DateTime?
  tokens       Token[]
  apiKeys      ApiKey[]
}

model ApiKey {
  id            String   @id @default(uuid())
  name          String   // e.g., "Microsoft MSRC API", "GitHub API"
  service       String   // e.g., "microsoft", "github", "custom"
  encryptedKey  String   @db.Text // Encrypted API key
  encryptedValue String?  @db.Text // Optional encrypted secret/value
  createdBy     User     @relation(fields: [createdById], references: [id])
  createdById   String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  lastUsedAt    DateTime?
  expiresAt     DateTime?
  isActive      Boolean  @default(true)
  
  @@index([service])
  @@index([isActive])
}
